<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://perlbrew.pl/</id>
  <title>perlbrew</title>
  <link rel="alternate" href="https://perlbrew.pl" type="text/html"/>
  <entry>
    <id>https://perlbrew.pl/Release-1.02.html?7a9ead407208b75b687914b932189c0c53e11292</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-1.02.html" type="text/html"/>
    <title>Perlbrew Release 1.02</title>
    <published>2025-07-18T21:35:49+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 1.02 was released at 2025-07-18T21:08:37+0900 with these  changes:
</p>
        <ul>
          <li>Thanks to our contributors: Andrii Nugged, Marius Feraru
</li>
          <li><code>uninstall</code> command now has shorter names: <code>rm</code> and <code>delete</code>.
</li>
          <li><code>patchperl</code> is now an optional dependency.
</li>
          <li>bashrc now works better with <code>set -u</code> ("use strict" in bash) is in place. PR #850.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-Notes.html?7f4576c1874571a2593db7230ededa33334b61f5</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-Notes.html" type="text/html"/>
    <title>Release Notes</title>
    <published>2024-11-27T20:24:21+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
          <li><a href="Release-1.01.html">Release 1.01</a>
</li>
          <li><a href="Release-1.00.html">Release 1.00</a>
</li>
          <li><a href="Release-0.99.html">Release 0.99</a>
</li>
          <li><a href="Release-0.98.html">Release 0.98</a>
</li>
          <li><a href="Release-0.97.html">Release 0.97</a>
</li>
          <li><a href="Release-0.96.html">Release 0.96</a>
</li>
          <li><a href="Release-0.95.html">Release 0.95</a>
</li>
          <li><a href="Release-0.94.html">Release 0.94</a>
</li>
          <li><a href="Release-0.93.html">Release 0.93</a>
</li>
          <li><a href="Release-0.92.html">Release 0.92</a>
</li>
          <li><a href="Release-0.91.html">Release 0.91</a>
</li>
          <li><a href="Release-0.90.html">Release 0.90</a>
</li>
          <li><a href="Release-0.89.html">Release 0.89</a>
</li>
          <li><a href="Release-0.88.html">Release 0.88</a>
</li>
          <li><a href="Release-0.87.html">Release 0.87</a>
</li>
          <li><a href="Release-0.86.html">Release 0.86</a>
</li>
          <li><a href="Release-0.85.html">Release 0.85</a>
</li>
          <li><a href="Release-0.84.html">Release 0.84</a>
</li>
          <li><a href="Release-0.83.html">Release 0.83</a>
</li>
          <li><a href="Release-0.82.html">Release 0.82</a>
</li>
          <li><a href="Release-0.81.html">Release 0.81</a>
</li>
          <li><a href="Release-0.79.html">Release 0.79</a>
</li>
          <li><a href="Release-0.78.html">Release 0.78</a>
</li>
          <li><a href="Release-0.77.html">Release 0.77</a>
</li>
          <li><a href="Release-0.76.html">Release 0.76</a>
</li>
          <li><a href="Release-0.75.html">Release 0.75</a>
</li>
          <li><a href="Release-0.74.html">Release 0.74</a>
</li>
          <li><a href="Release-0.73.html">Release 0.73</a>
</li>
          <li><a href="Release-0.72.html">Release 0.72</a>
</li>
          <li><a href="Release-0.71.html">Release 0.71</a>
</li>
          <li><a href="Release-0.70.html">Release 0.70</a>
</li>
          <li><a href="Release-0.69.html">Release 0.69</a>
</li>
          <li><a href="Release-0.68.html">Release 0.68</a>
</li>
          <li><a href="Release-0.67.html">Release 0.67</a>
</li>
          <li><a href="Release-0.66.html">Release 0.66</a>
</li>
          <li><a href="Release-0.65.html">Release 0.65</a>
</li>
          <li><a href="Release-0.64.html">Release 0.64</a>
</li>
          <li><a href="Release-0.63.html">Release 0.63</a>
</li>
          <li><a href="Release-0.62.html">Release 0.62</a>
</li>
          <li><a href="Release-0.61.html">Release 0.61</a>
</li>
          <li><a href="Release-0.59.html">Release 0.59</a>
</li>
          <li><a href="Release-0.58.html">Release 0.58</a>
</li>
          <li><a href="Release-0.57.html">Release 0.57</a>
</li>
          <li><a href="Release-0.56.html">Release 0.56</a>
</li>
          <li><a href="Release-0.55.html">Release 0.55</a>
</li>
          <li><a href="Release-0.54.html">Release 0.54</a>
</li>
          <li><a href="Release-0.53.html">Release 0.53</a>
</li>
          <li><a href="Release-0.52.html">Release 0.52</a>
</li>
          <li><a href="Release-0.51.html">Release 0.51</a>
</li>
          <li><a href="Release-0.50.html">Release 0.50</a>
</li>
          <li><a href="Release-0.49.html">Release 0.49</a>
</li>
          <li><a href="Release-0.48.html">Release 0.48</a>
</li>
          <li><a href="Release-0.47.html">Release 0.47</a>
</li>
          <li><a href="Release-0.46.html">Release 0.46</a>
</li>
          <li><a href="Release-0.45.html">Release 0.45</a>
</li>
          <li><a href="Release-0.44.html">Release 0.44</a>
</li>
          <li><a href="Release-0.43.html">Release 0.43</a>
</li>
          <li><a href="Release-0.42.html">Release 0.42</a>
</li>
          <li><a href="Release-0.41.html">Release 0.41</a>
</li>
          <li><a href="Release-0.40.html">Release 0.40</a>
</li>
          <li><a href="Release-0.39.html">Release 0.39</a>
</li>
          <li><a href="Release-0.38.html">Release 0.38</a>
</li>
          <li><a href="Release-0.37.html">Release 0.37</a>
</li>
          <li><a href="Release-0.36.html">Release 0.36</a>
</li>
          <li><a href="Release-0.35.html">Release 0.35</a>
</li>
          <li><a href="Release-0.34.html">Release 0.34</a>
</li>
          <li><a href="Release-0.33.html">Release 0.33</a>
</li>
          <li><a href="Release-0.32.html">Release 0.32</a>
</li>
          <li><a href="Release-0.31.html">Release 0.31</a>
</li>
          <li><a href="Release-0.30.html">Release 0.30</a>
</li>
          <li><a href="Release-0.29.html">Release 0.29</a>
</li>
          <li><a href="Release-0.28.html">Release 0.28</a>
</li>
          <li><a href="Release-0.27.html">Release 0.27</a>
</li>
          <li><a href="Release-0.26.html">Release 0.26</a>
</li>
          <li><a href="Release-0.25.html">Release 0.25</a>
</li>
          <li><a href="Release-0.24.html">Release 0.24</a>
</li>
          <li><a href="Release-0.23.html">Release 0.23</a>
</li>
          <li><a href="Release-0.22.html">Release 0.22</a>
</li>
          <li><a href="Release-0.21.html">Release 0.21</a>
</li>
          <li><a href="Release-0.20.html">Release 0.20</a>
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-1.01.html?acd4a2d86b45cfe1b6e12c0fb9bf83a5bab80e1f</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-1.01.html" type="text/html"/>
    <title>Perlbrew Release 1.01</title>
    <published>2024-11-18T20:52:00+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 1.01 was released at 2024-11-18T20:46:04+0900 with these  changes:
</p>
        <ul>
          <li>fix: <code>perlbrew install skaji-relocatable-perl-$version</code> on macOS.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/perlbrew-install-skaji-relocatable-perl.html?7e38a446cd8488f357a708d5912e4f18138487cf</id>
    <link rel="alternate" href="https://perlbrew.pl/perlbrew-install-skaji-relocatable-perl.html" type="text/html"/>
    <title>Perlbrew install skaji-relocatable-perl</title>
    <published>2024-10-04T11:52:08+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p><a href="https://github.com/skaji/relocatable-perl/">skaji/relocatable-perl</a> is a binary release of perl, provided by <a href="https://metacpan.org/author/SKAJI">Shoichi Kaji</a>, or SKAJI on CPAN, the author of <a href="https://metacpan.org/dist/App-cpm">cpm</a>.
</p>
        <p>Since <a href="Perlbrew-1.00.html">Perlbrew 1.00</a>, we could conveniently install skaji-relocatable-perl by doing:
</p>
        <pre>
          <code>perlbrew install skaji-relocatable-perl-5.40.0.0</code>
        </pre>
        <p>When the prefix "skaji-relocatable-perl-" is detected, the installation process would be routed to download the binary build for current OS and arch, instead of building from source code.
</p>
        <p>Notice that it has a longer version number that p5p perl, because some minor changes it sometimes required for rebuilding the binaries.
</p>
        <p>The list of exact version numbers can be found on this page:
</p>
        <p>L<a href="https://github.com/skaji/relocatable-perl/releases">https://github.com/skaji/relocatable-perl/releases</a>
</p>
        <p>Usually a ".0" suffix would suffice, sometimes there is a ".1" or even ".2" release, but not very often.
</p>
        <p>The skaji-relocatable-perl releases are build entirely on GitHub infra. It's built with the <code>userelocatableinc</code> option enabled by default, hence the name.
</p>
        <p>For perlbrew to install any binary releases, the <code>userelocatableinc</code> must be enabled, to basicaly support installation in your <code>$HOME</code> folder -- a folder name that is unique to for each user and cannot be known in advance.
</p>
        <p><a href="https://github.com/skaji/relocatable-perl/">skaji/relocatable-perl</a> seems to be a very good fit. With <a href="Perlbrew-1.00.html">Perlbrew 1.00</a> we make it possible to install this particular binary release. It is marked as experimental in the release note, with the intention that we may just be collecting problems for this particular change. But that's totally cool too. Problem-solving, that's what we do.
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Perlbrew-1.00.html?f2c076df16dd7bc63638e54e98cce89702caa287</id>
    <link rel="alternate" href="https://perlbrew.pl/Perlbrew-1.00.html" type="text/html"/>
    <title>Perlbrew 1.00</title>
    <published>2024-10-04T11:13:40+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 1.00 was released on 2024/10/4, a day when I (<a href="https://gugod.org">@gugod</a>) was
in a personal trip to the city of Hakodate, right before the awesome
conference of <a href="https://yapcjapan.org/2024hakodate/">YAPC::Hakodate, 2024</a>, in which I gave a short
presentation titled "perlbrew 3000!" -- it's a brief history of
perlbrew, when we look back from year 3000.
</p>
        <p>While I'm generally just inchworming my way forward on various hobby
projects, it is also sometimes needed to temporarily become a
futurist, leaping forward in time in great steps, then look
backward. It's indeed easier that way, as <a href="https://www.youtube.com/watch?v=lXLBTBBil2U">Jensen Huang has described
how himself not envisioning the future</a>,
since, well, it's all in the history book now.
</p>
        <p>Very often, the version number 1.0 means something special, but to put
in to the history of perlbrew, it is merely a version that comes after
0.99, and the 91st relesae since version 0.10 -- the very the
beginning of perlbrew. Thanks to the internet and the participant of
OSDC.tw -- we could still look backward in time, and found <a href="https://www.youtube.com/watch?v=KTQp5_iS6Zg">the very
first public announcement of perlbrew 0.10 on youtube.</a>.
</p>
        <p>With or without any specialtiy in the social status of version
numbers, whole-number versions does sits in the position of being
milestones, and generally means something major, with enough maturity,
or something that might be breaking with past versions. That would be
enough reasons for me to aggregate my thoughts together and making up
a much longer release notes for perlbrew 1.00.
</p>
        <p>Oh yes, it's <code>1.00</code>, not <code>1.0</code>. Not just because two 0s are better
one, but because conventionally I've been using 2 digits in the 2nd
part of version numbers, and I intend to keep it as a convention of
the perlbrew project. So the next major milestone would be <code>2.00</code>, but
not <code>2.0</code>.
</p>
        <p>Someone might argue about why having such subtle differences since,
<code>1.00</code> vs <code>1.0</code>, they don't meaning different things: it's the same
point in the multi-dimensional plane of version numbers and they are
both parsed as the same version object by most of
version-number-parsing libraries (I hope.)
</p>
        <p>Suffice to say, that it's the job the author, to give arbitrary
meanings to the version numbers of their software, and if you ask me,
I'd say it's non-sense to use even numbers to mean stability and odd
numbers to meaning instability. Prime numbers should be used to mean
something stable, since they are not breakable. I may eventually
engage with that rule.
</p>
        <p>Anyhow, perlbrew 1.00 is out and we are now on the path to perlbrew
3000. I wholeheartly thank to the 148 contributors who've spent their
valuable time and provides commits for the perlbrew project.
</p>
        <p>To get to perlbrew 3000, I extrapolate that, we will probably require
about 1000 more contributors. Developers, you know what to do.
</p>
        <p>But for now, happy perlbrew-ing. 🍺
</p>
        <p>Written before YAPC::Hakodate.
2024/10/4, <a href="https://gugod.org">@gugod</a>.
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-1.00.html?ab179fff4919c55b0c3b28aa95b25dd3c8c0fdbe</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-1.00.html" type="text/html"/>
    <title>Perlbrew Release 1.00</title>
    <published>2024-10-04T11:03:40+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 1.00 was released at 2024-10-04T10:48:40+0900 with these  changes:
</p>
        <ul>
          <li>Experimental: <code>perlbrew install</code> now accept names like skaji-relocatable-perl-$version.
</li>
        </ul>
        <p>See also: <a href="Perlbrew-1.00.html">Perlbrew 1.00</a>
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.99.html?fcfbfb5be9967252d97458d6ab7acbc961f61b54</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.99.html" type="text/html"/>
    <title>Perlbrew Release 0.99</title>
    <published>2024-09-07T16:37:45+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.99 was released at 2024-09-07T16:30:28+0900 with these  changes:
</p>
        <ul>
          <li>Thanks to our contributors: Graham Knop, Joelle Maslak, Luke Closs, jonasbn
</li>
          <li>bashrc executes properly in bash shells with +h option set
</li>
          <li>Allow specification of non-standard Perl location
</li>
          <li>make-pp now requires the input to be specified with <code>-i</code> or <code>--input</code>.
</li>
          <li>Tests are ported to Test2. Big thanks to Luke Closs.
</li>
          <li>Command make-pp now expects the input to be the path of an existing executable perl program, and would not be searching through $PATH.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Install-a-sitecustomize.pl-file-with-perlbrew.html?cf34bcbc9553fb22f7cec71da6b5a4c59fdeea63</id>
    <link rel="alternate" href="https://perlbrew.pl/Install-a-sitecustomize.pl-file-with-perlbrew.html" type="text/html"/>
    <title>Install a sitecustomize.pl file with perlbrew</title>
    <published>2024-02-08T06:56:33+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>by <a href="https://github.com/xdg">@xdg</a>
</p>
        <p>When perl is compiled with <code>-Dusesitecustomize</code> it will look for a file in the <code>$Config{sitelib}</code> directory called <code>sitecustomize.pl</code> and execute it extremely early in the life of the interpreter.  (See <a href="http://perldoc.perl.org/perlrun.html">perldoc perlrun</a> and the <code>-f</code> switch for an explanation.)
</p>
        <p>Perlbrew 0.37 adds the <code>--sitecustomize</code> installation option to specify a Perl file to be installed as <code>sitecustomize.pl</code>. (Perlbrew will also set <code>-Dusesitecustomize</code> automatically.)
</p>
        <pre>
          <code>$ perlbrew install perl-5.14.2 --sitecustomize /path/to/customize.pl
</code>
        </pre>
        <p>This is extremely useful for doing dynamic manipulation of the environment or perl globals.  In particular, it can be used to modify @INC in a more customized way than can be achieved with <code>PERL5LIB</code>.
</p>
        <p>Consider this usage example: A user wants to be able to install a command line perl application like App::Ack and have it be available regardless of which perl is active with Perlbrew.  Further, the user would like to keep its dependencies isolated so that the Perlbrew-installed perl stays 'pure'.
</p>
        <p>A good way to install an isolated application is to use <code>local::lib</code> with Perlbrew:
</p>
        <pre>
          <code>$ perlbrew lib create ack
$ perlbrew use perl-5.14.2@ack
$ cpanm App::Ack
</code>
        </pre>
        <p>This installs the 'ack' program to the <code>bin</code> directory of the configured local library directory.  If the user switches to another Perl or another local library directory, <code>ack</code> won't be available.  The user can't run <code>ack</code> directly out of the local library <code>bin</code> directory because <code>PERL5LIB</code> won't be set correctly to find its dependencies.
</p>
        <p>There are many ways to solve this problem.  One approach is to use a <code>sitecustomize.pl</code> file.  The following <code>sitecustomize.pl</code> file checks to see if the executing script appears to be installed in a
local library that follows the <code>INSTALL_BASE</code> convention.  If so, it <strong>automatically</strong> adds the proper library path to <code>@INC</code>:
</p>
        <pre>
          <code>use strict;
use Config;
use Cwd ();
my %seen;
my @bindirs =
  grep { defined &amp;&amp; !$seen{$_}++ } 
  map { $Config{"install". $_} }
  map { ("${_}bin", "${_}script") } "", "site", "vendor";

my $script = Cwd::realpath($0);

if ( ! grep { /\Q$script\E/ } @bindirs ) {
  my @path = split "/", $script;
  if ( @path &gt; 2 ) { # at least /bin/foo
    pop @path; # get rid of script filename
    my $installbase = join("/", @path[0 .. $#path-1], 'lib', 'perl5');
    if ( $path[-1] eq 'bin' &amp;&amp; -d $installbase ) {
      require lib;
      lib-&gt;import($installbase);
    }
  }
}
</code>
        </pre>
        <p>That lets the user switch Perlbrew perls but still run the original <code>ack</code> program via an alias.
</p>
        <pre>
          <code>$ alias ack=`which ack`
$ perlbrew use perl-5.10.2
$ ack PATTERN
</code>
        </pre>
        <p>The <code>ack</code> that is run via the alias has a shebang line (<code>#!...</code>) that invoke the original perl, which will run <code>sitecustomize.pl</code>, which will fix up <code>@INC</code> and then <code>ack</code> will run successfully, finding its dependencies in <code>@INC</code>.
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.98.html?965d801e174bd3416d63af78b45f210705d41101</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.98.html" type="text/html"/>
    <title>Perlbrew Release 0.98</title>
    <published>2023-08-11T23:29:17+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.98 was released at 2023-08-11T22:54:38+0900 with these  changes:
</p>
        <ul>
          <li>Remove the support of cperl from <code>available</code> and <code>install</code> command. Github PR: #777. cperl can still be installed by specifying the tarball, just not by their short names.
</li>
          <li>new command: make-shim
</li>
          <li>new command: make-pp.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.97.html?47cef6364ee955d4832a403cd5d0ee90ce303ab1</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.97.html" type="text/html"/>
    <title>Perlbrew Release 0.97</title>
    <published>2023-05-12T23:47:16+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.97 was released at 2023-05-12T22:33:42+0900 with these  changes:
</p>
        <ul>
          <li>Thanks to our contributors: Elvin Aslanov, Graham Knop, Shoichi Kaji, Tomasz Konojacki, brian greenfield
</li>
          <li>The documentation of <code>clone-module</code> and <code>list-modules</code> are improved.
</li>
          <li>No longer depends on Pod::Parser. Github PR #760
</li>
          <li>Bugfix for csh users: Github PR #770
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.96.html?77b016ff24f4757a27b6dd0ded01d927cbceb21b</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.96.html" type="text/html"/>
    <title>Perlbrew Release 0.96</title>
    <published>2022-08-01T09:14:07+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.96 was released at 2022-07-31T15:42:39+0900 with these changes:
</p>
        <ul>
          <li>Thanks to our contributors: Rolf Stöckli
</li>
          <li><code>install-cpm</code> is now properly documented. Thanks to Tekki.
</li>
          <li>Let <code>install</code> hint for <code>init</code> when PERLBREW_ROOT does not exist. .RT #57669.
</li>
          <li>Reveal the actual error code of curl/wget etc. Github issue #748.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.95.html?bd639c4992008ac63d93b6509549886ef7cbce5c</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.95.html" type="text/html"/>
    <title>Perlbrew Release 0.95</title>
    <published>2022-05-16T00:08:58+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.95 was released at 2022-05-15T22:59:11+0800 with these  changes:
</p>
        <ul>
          <li>Thanks to our contributors: Leon Timmermans
</li>
          <li>Now we use metacpan api for fetching perl versions and for downloading. Github PR #743
</li>
          <li><code>--verbose</code> flag now also enable verbosity of underlying curl/wget commands. Github PR #740.
</li>
          <li>Avoid perl test errors when NO_COLOR is set. Github PR #738
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/The-Discussion-forum-of-perlbrew-project.html?61e416f132705ec11c566899732136589d322b4e</id>
    <link rel="alternate" href="https://perlbrew.pl/The-Discussion-forum-of-perlbrew-project.html" type="text/html"/>
    <title>The Discussion forum of perlbrew project</title>
    <published>2021-12-05T19:58:23+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>There has never being a online forum / discussion channel for general questions for perlbrew projects and therefoe such needs are dispatched to... everywhere.
</p>
        <p>From time to time, people also use GitHub issue as the channel for Q and A... because it seems feasible. I also don't mind having general discussions via that interface becaues... well, I'm not really the everything-has-to-be-tidy-up kind of guy.
</p>
        <p>That said.. a while ago I've discovered the "Discussions" feature is added to GitHub and enabled it for the repo "gugod/App-perlbrew":
</p>
        <p>Here: <a href="https://github.com/gugod/App-perlbrew/discussions">https://github.com/gugod/App-perlbrew/discussions</a>
</p>
        <p>So... now there is only more place for general questions to go. Interface-wise it seems to be identila to GitHub issues. Since it is essentially free (it does not cost me extra mony to enable such feature) I'll just leave it on.
</p>
        <p>Feel free to just drop by and share how perlbrew is useful  o you (or how it isn't -- that's cool too.)
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.94.html?cfe3cbcbe7a11ffec31fc56698c7693942dc1d72</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.94.html" type="text/html"/>
    <title>Perlbrew Release 0.94</title>
    <published>2021-12-05T08:56:34+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.94 was released at 2021-12-05T08:39:16+0900 with these  changes:
</p>
        <ul>
          <li>Let <code>self-upgrade</code> print version numbers when doing upgrades. Github issue #678.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.93.html?868d199c24fd4214768d7071a8e01fcffa66e145</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.93.html" type="text/html"/>
    <title>Perlbrew Release 0.93</title>
    <published>2021-11-22T23:52:02+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.93 was released at 2021-11-22T23:09:25+0900 with these  changes:
</p>
        <ul>
          <li>Let <code>clone-modules</code> takes just one arguments and mean 'cloning modules from that perl'.
</li>
          <li>Let <code>list-modules</code> and <code>clone-modules</code> map certain output to their representative module name. Github issue #722
</li>
          <li><code>exec</code> command now takes aliases explicitly specified in <code>--with</code> args and run commands with those aliases -- even if that would run the same thing twice. Github issue #725
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Installation.html?5d2478b2a08da3116ab0ae3d4152fd730248f9d5</id>
    <link rel="alternate" href="https://perlbrew.pl/Installation.html" type="text/html"/>
    <title>Installation</title>
    <published>2021-06-19T16:28:18+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>Copy &amp; Paste this line into your terminal:
</p>
        <pre>
          <code>\curl -L https://install.perlbrew.pl | bash
</code>
        </pre>
        <p>Or, if your system does not have curl but something else:
</p>
        <pre>
          <code># Linux
\wget -O - https://install.perlbrew.pl | bash

# FreeBSD
\fetch -o- https://install.perlbrew.pl | sh
</code>
        </pre>
        <p>If you prefer to install with cpan, there are two steps:
</p>
        <pre>
          <code>sudo cpan App::perlbrew
perlbrew init
</code>
        </pre>
        <p>If it is installed with cpan, the perlbrew executable should be installed as
<code>/usr/bin/perlbrew</code> or <code>/usr/local/bin/perlbrew</code>. For all users who want to use
perlbrew, a prior <code>perlbrew init</code> needs to be executed.
</p>
        <p>The default perlbrew root directory is <code>~/perl5/perlbrew</code>, which can be changed
by setting <code>PERLBREW_ROOT</code> environment variable before the installation and
initialization. For more advanced installation process, please read <a href="http://metacpan.org/module/App::perlbrew">the
perlbrew document</a>.
</p>
        <h3>Install, other ways
</h3>
        <p>If you use <a href="https://metacpan.org/pod/Sparrow">Sparrow</a> there is sparrow plugin named <a href="https://github.com/melezhik/perlbrew">perlbrew</a> to install perlbrew. It's poorly tested but proved to be working for Ubuntu/Debian platforms.
</p>
        <p>If you are using Windows, please take a look at <a href="https://github.com/stevieb9/berrybrew">Berrybrew</a>
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.92.html?552632d99a2fc7e7bef6b89f79e787df2f4cc551</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.92.html" type="text/html"/>
    <title>Perlbrew Release 0.92</title>
    <published>2021-04-15T23:59:40+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.92 was released at 2021-04-15T23:53:55+0900 with these  changes:
</p>
        <ul>
          <li>Thanks to our contributors: chee
</li>
          <li>Fix a message mentioning fish config. GitHub PR #712
</li>
          <li>Fetch cperl releases from <a href="https://github.com/perl11/cperl/releases">https://github.com/perl11/cperl/releases</a> instead
</li>
          <li>Let <code>clone-modules</code> command accept <code>--notest</code> and skip running module tests
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.91.html?964be9f1be7c365c0f06c7aef1da9fdb76735178</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.91.html" type="text/html"/>
    <title>Perlbrew Release 0.91</title>
    <published>2021-01-31T17:28:51+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.91 was released at 2021-01-31T17:10:27+0900 with these  changes:
</p>
        <ul>
          <li>Fix META info included in 0.90. No other feature changes.
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.90.html?3291ca5b7d3c2061540315f4f29f8761c0d4b402</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.90.html" type="text/html"/>
    <title>Perlbrew Release 0.90</title>
    <published>2021-01-29T09:53:50+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.90 was released at 2021-01-29T09:43:17+0900 with these notable changes:
</p>
        <ul>
          <li>Thanks to our contributors: Mose Schmiedel, gucchisk
</li>
          <li>The output of 'available' command is split into sections of different type of distributions. Github issue #646.
</li>
          <li>Let the output of <code>perlbrew -h</code> be the short usage. Github issue #647
</li>
          <li>Unbreak env script for fish users. GitHub PR #698 and #708
</li>
          <li>Prefer https URLs of www.cpan.org
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Dealing-with-shebangs.html?e8a92b77cf793dd793e83c70adde31420374e6ae</id>
    <link rel="alternate" href="https://perlbrew.pl/Dealing-with-shebangs.html" type="text/html"/>
    <title>Dealing with shebangs</title>
    <published>2020-10-29T09:03:40+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>In the POD of perlrun, we can find two possible perl program preambles that tries to use the environment-decided perl installation, one is very cryptic: 
</p>
        <pre>
          <code>#!/bin/sh
#! −*−perl−*−
eval 'exec perl −x −wS $0 ${1+"$@"}'
    if 0;
</code>
        </pre>
        <p>The other is extremely simple:
</p>
        <pre>
          <code>#!/usr/bin/env perl
</code>
        </pre>
        <p>Basically they are both telling the OS (that understands the shebang) to find the first "perl" executable in the list of $PATH, and <code>exec</code> that program by appending the current file name after the shebang. The first snippets runs <code>/bin/sh</code>, the second runs <code>/usr/bin/env</code>. Neither of them invokes "perl" directly, like this shebang you'll find in most perl programs:
</p>
        <pre>
          <code>#!/usr/bin/perl
</code>
        </pre>
        <p>This is because most UNIX-like systems (especially Linux) comes with perl installed at <code>/usr/bin/perl</code>. Some UNIX does not have perl by default, but can be easily installed latter on. Just that they might end up being at <code>/usr/local/bin/perl</code>. Usually perl programmers call them "system perl".
</p>
        <p>A developer might install their own version of perl to anywhere like <code>/opt/perl5.14.2/bin/perl</code> or <code>/opt/local/bin/perl</code> or any other fancy paths. An put the bin path to the beginning of <code>$PATH</code> environment variable so that when they run perl programs as <code>perl foo.pl</code>, it'll invoke their own version of perl, not the system perl. There is no special names for such perl installation, let's call them as "env perl" in the article.
</p>
        <p>perlbrew rely on this mechanism to be functional properly. Whenever you say <code>perlbrew use 5.14.2</code>, perlbrew locates the path of 5.14.2 perl binary, and modify <code>$PATH</code> to point to there. Running perl programs with env perl requires you type "perl" in the beginning of the command. Relying shebang lines in the code does not.
</p>
        <p>The shebang schema is like Dokodemo Door, a convention that brings huge convenience to easily specify an compiler + runner of the code. Without this design, scripting/dynamic language authors might just create their own conventions.
</p>
        <p>However, it also creates problems. A cross-platform perl program might not be set be executable because the shebang line is valid on the author's platform, but not on the users' environment. A perl program authored on Mac can simply put <code>#!/usr/bin/perl</code> in the first line, but once that program gets copied to FreeBSD, perl can only be found at <code>#!/usr/local/bin/perl</code>. The user intend to run the program should modify the code a little bit in order to make it a valid executable. Which really invalids the statement that "perl programs are cross-platform."
</p>
        <p>Well, that sounds like picking bones from a egg. Developers will eventually learn that they can either symlink perl around, or have some fancy scripts that properly modify shebang in-place. True. However when a program does not run because of a invalid shebang line, it can be really frustrated for newbies
</p>
        <p>Sadly, there is really no perfect cross-platform shebang that works for all UNIX-like systems.
</p>
        <p>However, CPAN distributions built with <code>ExtUtil::MakeMaker</code> solves this issue in a very good way. When perl programs are distributed / installed as a CPAN distribution, its shebang line are rewritten to be the same perl that used to invoke cpan client itself. Or, if you download+extract a CPAN distribution on your own and run <code>perl Makefile.PL</code> to do manual installation, it will be your env perl.
</p>
        <p>Since shebang is hard to be cross-platfrom, it is also not trivial to decide what to put on the perlbrew executable shebang. You'll find that it currently contains <code>#!/usr/bin/perl</code>. However, the true is, when users runs this installer:
</p>
        <pre>
          <code>curl -kL http://install.perlbrew.pl | bash
</code>
        </pre>
        <p>The downloaded perlbrew will be modified to use your system perl shebang. To be more specific, it is the pre-perlbrew env perl shebang. That means <code>the first perl in $PATH that is not under $PERLRREW_ROOT</code>.
</p>
        <p>You might remember that it used to be just <code>#!/usr/bin/env perl</code>. But that has at least 2 drawbacks:
</p>
        <ol>
          <li>CentOS Linux comes without <code>/usr/bin/env</code>, but only <code>/bin/env</code> (well, the same for many other UNIXs)
</li>
          <li><code>perlbrew use perl-5.6.0</code> will strangle perlbrew executable itself, because perlbrew requires 5.8.8.
</li>
        </ol>
        <p>Therefore, it is the best to let <code>perlbrew</code> itself fixed to use system perl shebang. You may leave your own program to use the env shebang so that it can be invoked with env perl, which is managed with perlbrew. Optionally, you might want to hard-coded a perlbrew perl shebang in your code for some use cases.
</p>
        <p>Shebang is cool. It even feels like a cool word to be spoken. But having to manage shebang in programs really sucks. <em>shrug</em>
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Deploying-Perl-bindings-from-tools-installed-with-Homebrew-on-OS-X.html?579036a659d3b285b7fcd0cdae147e3fc204af23</id>
    <link rel="alternate" href="https://perlbrew.pl/Deploying-Perl-bindings-from-tools-installed-with-Homebrew-on-OS-X.html" type="text/html"/>
    <title>Deploying Perl bindings from tools installed with Homebrew on OS X</title>
    <published>2020-10-29T09:03:19+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>by  Lieven Hollevoet <a href="https://github.com/hollie">@hollie</a>
</p>
        <p>I have been using Perlbrew happily on OS X to install custom/recent Perl versions. Sometimes I need a more or less exotic Perl binding that I could easily install using Homebrew. Recent updates to Homebrew made that process a bit less automatic.
</p>
        <p>Below I describe how to install the perl-shared binding for RRDTool on a recent OS X with a recent version of Homebrew.
</p>
        <h2>Why is it not working automatically
</h2>
        <p>There are two issues with the combination of Perlbrew and Homebrew:
 <em> Homebrew assumes you're using the system Perl and does not automatically detect your locally-installed Perl.
 </em> Latest versions of Homebrew work in a sandbox environment. This means that the build chain has no write permissions to the folder that contains the Perlbrew site modules.
</p>
        <h3>Detect locally-installed Perl version
</h3>
        <p>This can be forced by passing to <code>brew</code> the option <code>--env=std</code>. For more information and the discussion about this please see the last posts in this <a href="https://github.com/Homebrew/legacy-homebrew/issues/12090">support ticket</a>.
</p>
        <h3>Work around the sandbox
</h3>
        <p>When you're install a packet with brew, the sandbox seems to prohibit writes to other folders than the target folder for the brew process. This means that if a packet creates a Perl module, this module cannot be written to the Perl site module folder. To work around that: 
 <em> enable the option to not delete the build folder
 </em> navigate to the build folder yourself and install the perl module.
</p>
        <h2>Practical example for RRDtool
</h2>
        <p><code>brew install --env=std --build-from-source --keep-tmp rrdtool</code>
</p>
        <p>Then navigate to the temp folder where the build results are retained. The full path is listed in the output of the previous command.
</p>
        <p>Go into the subfolder <code>bindings/perl-shared</code> and do <code>make install</code> there. You'll see the RRDs.pm nicely be deployed into your favorite Perl version module folder.
</p>
        <h2>References
</h2>
        <p>I've <a href="http://discourse.brew.sh/t/installing-rrdtool-perl-module-on-local-perl-no-write-permission-to-local-folder/610">discussed</a> this with a developer from Homebrew. 
</p>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Reinstall-All-Modules-On-New-Perl.html?520c4bb30f1f9056794e9ce14762932f14b5604b</id>
    <link rel="alternate" href="https://perlbrew.pl/Reinstall-All-Modules-On-New-Perl.html" type="text/html"/>
    <title>How To Reinstall All Modules On New Perl</title>
    <published>2020-10-23T10:16:29+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>Sometimes when you install a new perl version, you want to put all the modules you were using on a previous version onto your new perl install.
</p>
        <p>You can easily get the list of modules in the current perl installation with <code>list-modules</code> command:
</p>
        <pre>
          <code>perlbrew use perl-5.8.8@foo-project
perlbrew list-modules
</code>
        </pre>
        <p>That simply prints out module names that you can use latter.
</p>
        <p>Since <code>perlbrew 0.81</code>, it is possible to use the <code>clone-modules</code> command to reinstall all the modules from a Perl instance to another.
</p>
        <p>For instance:
</p>
        <pre>
          <code>perlbrew clone-modules 5.26.1 5.27.7
</code>
        </pre>
        <p>will <em>clone</em> all modules from instance <code>5.26.1</code> to instance <code>5.27.7</code>.
</p>
        <p>For <code>perlbrew</code> version prior to <em>0.81</em> or in case the <code>clone-modules</code>
does not what you need, the following one liner can pipe all modules from one
instance of Perl to another one asking <code>cpanm</code> to install each one on the latter:
</p>
        <pre>
          <code>perlbrew list-modules | perlbrew exec --with perl-5.16.2@foo-project cpanm
</code>
        </pre>
        <p>The <code>exec</code> command is particularly helpful to run any program as if it is in the
environment of the specified perl installations. 
</p>
        <p>Get more details running the <code>help</code> command:
</p>
        <pre>
          <code>perlbrew help list-modules
perlbrew help exec
perlbrew help clone-modules
</code>
        </pre>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.89.html?d8b71c2394200ca9d7c2688ccc04961af438c3e2</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.89.html" type="text/html"/>
    <title>Perlbrew Release 0.89</title>
    <published>2020-10-19T10:07:30+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.89 was released at 2020-10-19T09:26:19+0900 with these notable changes:
</p>
        <ul>
          <li>Thanks to our contributors: Håkon Hægland, Nicolas R, Peter Tripp
</li>
          <li>Make the bashrc compatible with 'bash -u'. Github PR #694
</li>
          <li>Prevent build directory from being overwritten. Github PR #683
</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <id>https://perlbrew.pl/Release-0.88.html?7abbaa95bfcc7a675d32eba5ff44863f0994e9c9</id>
    <link rel="alternate" href="https://perlbrew.pl/Release-0.88.html" type="text/html"/>
    <title>Perlbrew Release 0.88</title>
    <published>2020-01-29T22:11:37+09:00</published>
    <author>
      <name>gugod</name>
    </author>
    <content type="xhtml" xml:base="https://perlbrew.pl">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>perlbrew 0.88 was released at 2020-01-29T21:40:07+0900 with these notable changes:
</p>
        <ul>
          <li>Thanks to our contributors: Dave Rolsky, Gil Magno, Zhu Sheng Li
</li>
          <li><code>install</code> command now shows errors message from http_downlod. Github PR #681.
</li>
          <li>Fix: The .tar.bz2 suffix are removed from the output ouf <code>available</code> PR #685
</li>
        </ul>
      </div>
    </content>
  </entry>
  <updated>2025-07-18T21:35:49+09:00</updated>
</feed>
